version: '3.9'

services:
  db:
    image: postgres
    container_name: ${POSTGRES_HOST}
    hostname: ${POSTGRES_HOST}
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME}"]
      interval: 2s
      timeout: 10s
      retries: 5

  migrate:
    image: migrate/migrate
    container_name: migrate
    depends_on:
      - db
    volumes:
      - ./internal/app/database/migration:/internal/app/database/migration
    command: ["-path", "/internal/app/database/migration", "-database", "postgres://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}?sslmode=disable", "up"]
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10
        window: 5s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: zadanie-6105:latest
    container_name: app
    hostname: zadanie-6105
    ports:
      - "8080:8080"
    environment:
      SERVER_ADDRESS: ${SERVER_ADDRESS}
      POSTGRES_CONN: ${POSTGRES_CONN}
      POSTGRES_JDBC_URL: ${POSTGRES_JDBC_URL}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    depends_on:
      - migrate
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10
        window: 5s
